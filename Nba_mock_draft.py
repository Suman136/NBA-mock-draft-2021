# -*- coding: utf-8 -*-
"""Untitled16 (7).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sug9-3zo-Ph9Bb6WJXyRoeR2z59Unjz5
"""

import numpy as np
import pandas as pd
import tensorflow as tf
import matplotlib.pyplot as plt
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder 
from sklearn.preprocessing import StandardScaler

data = pd.read_csv('2017-20.csv')
del data['Player']
X = data.iloc[:,4:80].values
Y = data.iloc[:,-1].values

X=np.asarray(X,float)
sc = StandardScaler()
X = sc.fit_transform(X)

ann = tf.keras.models.Sequential()

# Adding the input layer and the first hidden layer
ann.add(tf.keras.layers.Dense(units=6, activation='relu'))

# Adding the second hidden layer
ann.add(tf.keras.layers.Dense(units=6, activation='relu'))

# Adding the third hidden layer
ann.add(tf.keras.layers.Dense(units=6, activation='relu'))


ann.add(tf.keras.layers.Dense(units=6, activation='relu'))


# Adding the output layer
ann.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))

# Part 3 - Training the ANN

# Compiling the ANN
ann.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])



# Training the ANN on the Training set
ann.fit(X, Y, batch_size = 128, epochs = 250)

data2=pd.read_csv('stats2021.csv')
raspored=pd.read_csv('raspored-2021.csv')
tiiim=raspored.iloc[:,:].values

data2=data2[['Team', 'GP_T', 'MPG_T', 'FGM_T', 'FGA_T', 'FG%_T', '3PM_T', '3PA_T',
       '3P%_T', 'FTM_T', 'FTA_T', 'FT%_T', 'TOV_T', 'PF_T', 'ORB_T', 'DRB_T',
       'RPG_T', 'APG_T', 'SPG_T', 'BPG_T', 'PPG_T', 'TS%_T', 'eFG%_T',
       'Total S%_T', 'ORB%_T', 'DRB%_T', 'TRB%_T', 'AST%_T', 'TOV%_T',
       'STL%_T', 'BLK%_T', 'PPS_T', 'FIC40_T', 'ORtg_T', 'DRtg_T', 'eDiff_T',
       'Poss_T', 'Pace_T', 'FG', 'FGA', 'FG%', '2P', '2PA', '2P%',
       '3P', '3PA', '3P%', 'FT', 'FTA', 'FT%', 'ORB', 'DRB', 'TRB', 'AST',
       'STL', 'BLK', 'TOV', 'PF', 'PTS', 'PER', 'TS%', 'eFG%', '3PAr',
       'FTr', 'ORB%', 'DRB%', 'TRB%', 'AST%', 'STL%', 'BLK%', 'TOV%',
       'USG%', 'OWS', 'DWS', 'WS', 'WS/40', 'OBPM', 'DBPM', 'BPM', 'Player']]

draft_lista=['NBA draft']

for i in range(len(tiiim)):
  team=tiiim[i,1]
  draft_lista.append(team)
  tablica=[]

  data2=data2[data2.Player != str(draft_lista[-2])]

  filter=data2[data2.Team==team]
  K= filter.iloc[:,3:79].values
  T=filter.iloc[:,-1].values
  

  C=np.asarray(K,float)
  C = sc.fit_transform(C)

  for a in range(len(filter)):

    prvi=ann.predict([[C[a,0],C[a,1],C[a,2],C[a,3],C[a,4],C[a,5],C[a,6],C[a,7],C[a,8],
                       C[a,9],C[a,10],C[a,11],C[a,12],C[a,13],C[a,14],C[a,15],C[a,16],
                       C[a,17],C[a,18],C[a,19],C[a,20],C[a,21],C[a,22],C[a,23],C[a,24],
                       C[a,25],C[a,26],C[a,27],C[a,28],C[a,29],C[a,30],C[a,31],C[a,32],
                       C[a,33],C[a,34],C[a,35],C[a,36],C[a,37],C[a,38],C[a,39],C[a,40],
                       C[a,41],C[a,42],C[a,43],C[a,44],C[a,45],C[a,46],C[a,47],C[a,48],
                       C[a,49],C[a,50],C[a,51],C[a,52],C[a,53],C[a,54],C[a,55],C[a,56],
                       C[a,57],C[a,58],C[a,59],C[a,60],C[a,61],C[a,62],C[a,63],C[a,64],
                       C[a,65],C[a,66],C[a,67],C[a,68],C[a,69],C[a,70],C[a,71],C[a,72],
                       C[a,73],C[a,74],C[a,75]]])
                       
    tablica.append(prvi)
    print(tablica)
  choosen = max(tablica)
  print (choosen)
  for b in range(len(filter)):
    if choosen==tablica[b]:

      odabrani_igrac= T[b]
      draft_lista.append(odabrani_igrac)
      print(odabrani_igrac)

draft_lista
